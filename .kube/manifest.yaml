apiVersion: v1
kind: Service
metadata:
  name: eve-api-v1
  namespace: default
spec:
  ports:
    - port: 80
      targetPort: 3000
  selector:
    app: eve-api-v1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eve-api-v1
  namespace: default
spec:
  selector:
    matchLabels:
      app: eve-api-v1
  replicas: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/agent-inject-secret-env: "kv/data/devops/eve"
        vault.hashicorp.com/agent-inject-template-env: |
          {{- with secret "kv/data/devops/eve" -}}
          {{ range $k, $v := .Data.data }}
          export {{ $k }}={{ $v }}
          {{ end }}
          {{- end }}
        vault.hashicorp.com/role: "k8s-devops"
      labels:
        app: eve-api-v1
    spec:
      serviceAccountName: eve-api
      securityContext:
        runAsUser: 9001
        runAsGroup: 9001
        fsGroup: 65534
      containers:
        - name: eve-api-v1
          image: unanet-docker.jfrog.io/eve-api:0.1.0
          imagePullPolicy: Always
          env:
            - name: EVE_ARTIFACTORY_BASE_URL
              value: "https://unanet.jfrog.io/unanet/api"
            - name: EVE_GITLAB_BASE_URL
              value: "https://gitlab.unanet.io/api"
            - name: EVE_VAULT_ADDR
              value: "https://vault.unanet.io"
            - name: EVE_API_Q_URL
              value: "https://sqs.us-east-2.amazonaws.com/580107804399/eve-api-prod.fifo"
            - name: EVE_SCH_Q_URL
              value: "https://sqs.us-east-2.amazonaws.com/580107804399/eve-sch-prod.fifo"
            - name: EVE_S3_BUCKET
              value: "unanet-eve-queue"
            - name: EVE_AWS_REGION
              value: "us-east-2"
            - name: EVE_DB_HOST
              value: "devops-prod-eve-db.unanet.io"
            - name: EVE_DB_NAME
              value: "eve"
          ports:
            - containerPort: 3000
      imagePullSecrets:
        - name: docker-cfg
